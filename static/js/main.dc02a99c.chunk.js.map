{"version":3,"sources":["static/bear_1.jpeg","static/bear_2.JPG","static/obi_1.png","static/obi_2.jpeg","components/Problem/Problem.js","components/ActionsBox/ActionsBox.js","actions/ScreenLayoutActions.js","actions/ResponseActions.js","components/TerminalEmulator/TerminalEmulator.js","actions/CodeActions.js","components/CodeEditor/CodeEditor.js","containers/UnobtrusiveNavbar/UnobtrusiveNavbar.js","screens/CodeEnvironment.js","actions/ProblemActions.js","containers/NavBar/NavBar.js","containers/ProblemListing/ProblemListing.js","components/ProblemList/ProblemList.js","screens/AboutScreen/AboutScreen.js","App.js","serviceWorker.js","reducers/ScreenLayoutReducer.js","reducers/CodeReducer.js","reducers/ProblemReducer.js","reducers/ResponseReducer.js","reducers/index.js","index.js"],"names":["module","exports","ReactMarkdown","require","Problem","this","props","closeProblem","buttonJsx","problemClass","Button","variant","className","onClick","closeButtonClicked","Col","lg","problem","title","source","description","challenge","test_case_1","test_case_2","displayCloseButton","React","Component","ActionBox","expandProblemButtonClicked","terminalClass","showTerminalButtonClicked","hideTerminalButtonClicked","showTerminal","hideTerminal","expandProblem","code","problemId","that","axios","method","url","params","then","response","console","log","data","did_pass_tests","showModal","undefined","timeout_error","expected_output","actual_output","catch","error","displayExpandProblemButton","displayTerminalButton","submitButtonClicked","connect","state","screenLayout","id","codeState","dispatch","type","payload","codeEditorWidth","codeEditorHeight","content","modalContent","TerminalEmulator","commands","python","fn","arg1","terminal","current","problemTitle","pushToStdout","output","createRef","ref","welcomeMessage","promptLabel","updateCode","CodeEditor","placeholder","mode","theme","name","width","height","onLoad","onChange","fontSize","showPrintMargin","showGutter","highlightActiveLine","value","setOptions","showLineNumbers","tabSize","insertSpaces","UnobtrusiveNavbar","displayMenu","setState","class","to","CodeEnvironment","get","match","updateProblem","starting_code","MyVerticallyCenteredModal","onHide","closeModal","modal","show","Row","noGutters","Modal","aria-labelledby","centered","Header","closeButton","Title","Body","dangerouslySetInnerHTML","__html","Footer","navBar","Navbar","expand","Toggle","aria-controls","Collapse","Nav","problemListing","ListGroup","Item","ProblemList","problemListings","Container","map","obj","i","ProblemListing","key","AboutScreen","src","bear_1","bear_2","obi_1","obi_2","App","exact","path","NavBar","component","Boolean","window","location","hostname","defaultState","codeReducer","action","num_inputs","problemReducer","responseReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.dc02a99c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bear_1.cb04446b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/bear_2.f29b4fd1.JPG\";","module.exports = __webpack_public_path__ + \"static/media/obi_1.27478925.png\";","module.exports = __webpack_public_path__ + \"static/media/obi_2.3e90fb4c.jpeg\";","import React from 'react'\nimport './Problem.scss'\nimport { updateProblem } from './../../actions/ProblemActions'\nimport { Col, Button } from 'react-bootstrap'\nimport axios from 'axios'\nimport { Modal } from 'react-bootstrap'\nconst ReactMarkdown = require('react-markdown')\n\nclass Problem extends React.Component {\n  closeButtonClicked() {\n    this.props.closeProblem()  \n  }\n\n  displayCloseButton() {\n    let buttonJsx = null \n\n    if (this.props.problemClass == 'expanded') {\n      buttonJsx = <Button variant='light' className='hideButton mt-3' onClick={() => this.closeButtonClicked()}>Hide Problem</Button>\n    }\n\n    return buttonJsx\n  }\n\n  render() {\n    return(\n      <Col lg={6} className={this.props.problemClass + \" problemContainer\"}>\n        <div className='problem'>\n          <h1 className='bold'>{this.props.problem.title}</h1>\n          <ReactMarkdown source={this.props.problem.description}/>\n\n          <h3 className='bold'>Challenge</h3>\n          <ReactMarkdown source={this.props.problem.challenge}/>\n\n          <hr/>\n          <h3 className='bold'>Test Cases</h3>\n          <ReactMarkdown source={this.props.problem.test_case_1}/>\n          <hr/>\n          <ReactMarkdown source={this.props.problem.test_case_2}/>\n          {this.displayCloseButton()} \n        </div>\n      </Col>\n    )\n  }\n}\n\nexport default Problem;\n","import React from 'react'\nimport './ActionBox.scss'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { expandProblem, showTerminal, hideTerminal } from '../../actions/ScreenLayoutActions'\nimport { showModal } from '../../actions/ResponseActions'\nimport axios from 'axios'\n\nclass ActionBox extends React.Component {\n  displayExpandProblemButton() {\n    let buttonJsx = null\n    if (this.props.problemClass == 'hidden') {\n      buttonJsx = <Button variant=\"light\" className=\"mr-1\" onClick={() => this.expandProblemButtonClicked()}>Show Problem</Button>\n    }\n\n    return buttonJsx\n  }\n\n  displayTerminalButton() {\n    let buttonJsx = null\n    if (this.props.terminalClass == 'terminal-hidden') {\n      buttonJsx = <Button onClick={() => this.showTerminalButtonClicked()} variant=\"light\">Show Terminal</Button> \n    } else {\n      buttonJsx = <Button onClick={() => this.hideTerminalButtonClicked()} variant=\"light\">Hide Terminal</Button>\n    }\n\n    return buttonJsx;\n  }\n\n  showTerminalButtonClicked() {\n    this.props.showTerminal()\n  }\n\n  hideTerminalButtonClicked() {\n    this.props.hideTerminal()\n  }\n\n  expandProblemButtonClicked() {\n    this.props.expandProblem()\n  }\n\n  submitButtonClicked() {\n    const code = this.props.code\n    const problemId = this.props.problemId\n    let that = this\n    axios({\n      method: 'get',\n      url: `http://localhost:8000/api/submit/${problemId}`,\n      params: {\n        code\n      }\n    }).then((response) => {\n      console.log(response.data)\n      if (response.data.did_pass_tests) {\n        that.props.showModal(\"Nice you got it! You can move on to the next problem!\")\n      } else if (response.data.timeout_error !== undefined) {\n        that.props.showModal(`<strong>Wrong!</strong><br>Your code took too long! Make sure you're not going into an infinite loop or something like that.`)\n      } else {        \n        that.props.showModal(`<strong>Wrong!</strong><br><strong>Expected Output:</strong> ${response.data.expected_output}<br><strong>Actual Output</strong>: ${response.data.actual_output}`)\n      }\n    }).catch((error) => {\n      console.log(error)\n    }); \n  }\n\n  render() {\n    return (\n      <div className='ActionBox'>\n        <div className='left-buttons'>\n          {this.displayExpandProblemButton()}\n          {this.displayTerminalButton()}\n        </div>\n        <div className='right-buttons'>\n          <Button variant=\"success\" onClick={() => this.submitButtonClicked()}>Run Test Cases</Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const problemClass = state.screenLayout.problemClass\n  const terminalClass = state.screenLayout.terminalClass\n  const problemId = state.problem.id\n  const code = state.codeState.code\n  return { problemClass, terminalClass, code, problemId }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    expandProblem: () => dispatch(expandProblem()),\n    showTerminal: () => dispatch(showTerminal()),\n    hideTerminal: () => dispatch(hideTerminal()),\n    showModal: (content) => dispatch(showModal(content))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionBox)\n","export const closeProblem = () => {\n  return {\n    type: 'CLOSE_PROBLEM',\n    payload: {\n      problemClass: 'hidden',\n      codeEditorWidth: 12\n    }\n  }\n}\n\nexport const expandProblem = () => {\n  return {\n    type: 'EXPAND_PROBLEM',\n    payload: {\n      problemClass: 'expanded',\n      codeEditorWidth: 6\n    }\n  }\n}\n\n\nexport const showTerminal = () => {\n  return {\n    type: 'SHOW_TERMINAL',\n    payload: {\n      terminalClass: 'terminal',\n      codeEditorHeight: '50vh'\n    }\n  }\n}\n\nexport const hideTerminal = () => {\n  return {\n    type: 'HIDE_TERMINAL',\n    payload: {\n      terminalClass: 'terminal-hidden',\n      codeEditorHeight: '90vh'\n    }\n  }\n}\n","export const showModal = content => {\n  return {\n    type: 'SHOW_MODAL',\n    payload: {\n      modalContent: content,\n      showModal: true\n    }\n  }\n}\n\nexport const closeModal = () => {\n  return {\n    type: 'CLOSE_MODAL',\n    payload: {\n      modalContent: null,\n      showModal: false \n    }\n  }\n}\n\n","import React from 'react'\nimport './TerminalEmulator.scss'\nimport Terminal from 'react-console-emulator'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\n\nclass TerminalEmulator extends React.Component {\n  constructor (props) {\n    super(props)\n    this.terminal = React.createRef()\n  }\n\n  commands = {\n    python: {\n      fn: (arg1) => {\n        const terminal = this.terminal.current\n        if (arg1 === undefined) {\n          return \"Sorry, we don't support running python directly in the browser.\\n\" +\n            \"At any given point, you can only run the script of the file you're working on.\"\n        }\n\n        if (arg1 !== this.props.problemTitle) {\n          return `File \"${arg1}\" non found.\\n`\n        }\n        // send api request\n        const code = this.props.code\n        const problemId = this.props.problemId\n        axios({\n          method: 'get',\n          url: `http://localhost:8000/api/run/${problemId}`,\n          params: {\n            code\n          }\n        }).then((response) => {\n          terminal.pushToStdout(response.data.output)\n        }).catch((error) => {\n          console.log(error)\n        });\n        return \"\"\n      }\n    }\n  }\n\n  render() {\n    return(\n      <Terminal\n        className={this.props.terminalClass}\n        commands={this.commands}\n        ref={this.terminal}\n        welcomeMessage={'-- To test your code, you can run it here in the terminal. The name of python file is the name of the challenge.'}\n        promptLabel={'me@obcode:~$'}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const terminalClass = state.screenLayout.terminalClass\n  const problemId = state.problem.id\n  const problemTitle = state.problem.title\n  const code = state.codeState.code\n  return { terminalClass, code, problemId, problemTitle } \n}\n\nexport default connect(mapStateToProps)(TerminalEmulator)\n","export const updateCode = (code) => {\n  return {\n    type: 'UPDATE_CODE',\n    payload: {\n      code\n    }\n  }\n}\n","import React from 'react'\nimport AceEditor from \"react-ace\"\nimport \"ace-builds/src-noconflict/mode-python\"\nimport \"ace-builds/src-noconflict/theme-twilight\"\nimport ActionBox from '../ActionsBox/ActionsBox'\nimport TerminalEmulator from '../TerminalEmulator/TerminalEmulator'\nimport { Col } from 'react-bootstrap'\nimport './CodeEditor.scss'\nimport { updateCode } from '../../actions/CodeActions'\nimport { connect } from 'react-redux'\n\nclass CodeEditor extends React.Component {\n  render() {\n    return(\n      <Col lg={this.props.codeEditorWidth} className='CodeEditor'>\n        <AceEditor\n          placeholder=\"Python 3.8\"\n          mode=\"python\"\n          theme=\"twilight\"\n          name=\"code-editor\"\n          width={'auto'}\n          height={this.props.codeEditorHeight}\n          onLoad={this.onLoad}\n          onChange={(code) => this.props.updateCode(code)}\n          fontSize={22}\n          showPrintMargin={true}\n          showGutter={true}\n          highlightActiveLine={true}\n          value={this.props.code}\n          setOptions={{\n            showLineNumbers: true,\n            tabSize: 4,\n            insertSpaces: true\n          }}\n        />\n\n        <TerminalEmulator />        \n\n        <ActionBox/> \n      </Col>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { codeEditorWidth, codeEditorHeight } = state.screenLayout\n  const { code } = state.codeState\n  return { codeEditorWidth, codeEditorHeight, code }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCode: (code) => dispatch(updateCode(code))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CodeEditor)\n","import React from 'react'\nimport './UnobtrusiveNavbar.scss'\nimport { Link } from \"react-router-dom\";\n\n\nclass UnobtrusiveNavbar extends React.Component {\n  state = {\n    displayMenu: false\n  }\n\n  render() {\n    if (this.state.displayMenu) {\n     return (\n        <div className=\"UnobtrusiveNavbar__menu\">\n          <button onClick={() => this.setState({displayMenu: false})} className=\"UnobtrusiveNavbar\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n           <Link className=\"UnobtrusiveNavbar__menu-link\" to=\"/\">Home</Link> \n           <Link className=\"UnobtrusiveNavbar__menu-link\" to=\"/About\">About</Link> \n       </div>\n      ) \n    } else {\n      return (\n        <button onClick={() => this.setState({displayMenu: true})} className=\"UnobtrusiveNavbar\">\n          <i class=\"fas fa-bars\"></i>\n        </button>\n      )\n    }\n  }\n}\n\nexport default UnobtrusiveNavbar\n","import React from 'react'\nimport Problem from '../components/Problem/Problem'\nimport CodeEditor from '../components/CodeEditor/CodeEditor'\nimport UnobtrusiveNavbar from '../containers/UnobtrusiveNavbar/UnobtrusiveNavbar'\nimport { Row, Modal, Button } from 'react-bootstrap'\nimport { updateProblem } from '../actions/ProblemActions'\nimport { updateCode } from '../actions/CodeActions'\nimport { closeProblem } from '../actions/ScreenLayoutActions'\nimport { closeModal } from '../actions/ResponseActions'\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport axios from 'axios'\n\nclass CodeEnvironment extends React.Component {\n  componentDidMount() {\n    axios.get(`http://localhost:8000/api/problem/${this.props.match.params.id}`).then((response) => {\n      this.props.updateProblem(response.data)\n      this.props.updateCode(response.data.starting_code)\n    })\n  }\n\n  render() {\n    return(\n      <div className='wrapper'>\n        <MyVerticallyCenteredModal onHide={this.props.closeModal} content={this.props.modal.modalContent} show={this.props.modal.showModal} />\n        <UnobtrusiveNavbar/> \n        <Row noGutters={true}>\n          <Problem\n            problemClass={this.props.problemClass}\n            problem={this.props.problem}\n            closeProblem={this.props.closeProblem}\n          /> \n          <CodeEditor/>\n        </Row>\n      </div>\n    )\n  }\n}\n\nfunction MyVerticallyCenteredModal(props) {\n  return (\n    <Modal\n      {...props}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Test Results \n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>\n          <div dangerouslySetInnerHTML={{ __html: props.content }} />\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n        { props.content == \"Nice you got it! You can move on to the next problem!\" \n        ? <Link to=\"/\" className=\"btn btn-success\">Back To Problems</Link> \n        : <Button onClick={props.onHide}>Close</Button> }\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nconst mapStateToProps = state => {\n  const problem = state.problem\n  const problemClass = state.screenLayout.problemClass\n  const modal = state.response\n  return { problem, problemClass, modal }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateProblem: (problem) => dispatch(updateProblem(problem)),\n    updateCode: (code) => dispatch(updateCode(code)),\n    closeProblem: () => dispatch(closeProblem()),\n    closeModal: () => dispatch(closeModal())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CodeEnvironment)\n","export const updateProblem = (problem) => {\n  return {\n    type: 'UPDATE_PROBLEM',\n    payload: {\n      problem\n    }\n  }\n}\n\n\n","import React from 'react'\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap'\nimport {\n  BrowserRouter as Router,\n  Link,\n} from \"react-router-dom\";\n\nconst navBar = () => {\n  return (\n    <Navbar className='navbar-dark' expand=\"lg\">\n      <Link to='/' className=\"navbar-brand\">OBCode</Link>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <Link to='/' className='nav-link active'>Home</Link>\n          <Link to='/about' className='nav-link active'>About</Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nexport default navBar\n","import React from 'react'\nimport { ListGroup } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\";\n\nconst problemListing = (props) => {\n  return (\n    <ListGroup.Item>\n      <Link to={`/problem/${props.id}`}>{ props.title }</Link>\n    </ListGroup.Item>\n  )\n}\n\nexport default problemListing\n","import React from 'react'\nimport axios from 'axios'\nimport ProblemListing from '../../containers/ProblemListing/ProblemListing'\nimport { Container, ListGroup } from 'react-bootstrap'\n\nclass ProblemList extends React.Component {\n  state = {\n    problemListings: []\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8000/api/problems').then(response => {\n      this.setState({problemListings: response.data})\n    })\n  }\n\n  render() {\n    return (\n      <Container>\n        <ListGroup className='mt-5'>\n          {this.state.problemListings.map((obj, i) => {\n            return <ProblemListing key={obj.id} id={obj.id} title={obj.title}/>\n          })}\n        </ListGroup>\n      </Container>\n    )\n  }\n}\n\nexport default ProblemList\n","import React from 'react'\nimport { Container, Col, Row } from 'react-bootstrap'\nimport bear_1 from '../../static/bear_1.jpeg'\nimport bear_2 from '../../static/bear_2.JPG'\nimport obi_1 from '../../static/obi_1.png'\nimport obi_2 from '../../static/obi_2.jpeg'\nimport './AboutScreen.scss'\n\nclass AboutScreen extends React.Component {\n  render() {\n    return(\n      <Container>\n        <h1 className='about--h1'>About</h1>\n\n        <Row>\n          <Col lg={3}>\n            <img className='about--img' src={bear_1} width='100%'/>\n          </Col>\n          <Col lg={3}>\n            <img className='about--img' src={bear_2} width='100%'/>\n          </Col>\n          <Col lg={3}>\n            <img className='about--img' src={obi_1} width='100%'/>\n          </Col>\n          <Col lg={3}>\n            <img className='about--img' src={obi_2} width='100%'/>\n          </Col>\n        </Row>\n\n        <div className='about--content'>\n          <p className='about--p'>I built OBCode for my girlfriend, who very recently decided to change her major to Computer Science and start learning Python.</p>\n\n          <p className='about--p'>\n            She texted me once, asking me to quiz her on some of the python subject material she had learned that day. However, it's difficult to write\n            code over text messages. So, I got the idea of making a website that could give her python programming challenges, and to welcome her into\n            the world of programming in the funnest possible way, I made the central theme of the website her pets!\n          </p>\n\n          <p className='about--p'>\n            The site is called OBCode because \"O\" and \"B\" stand for \"Obi\" and \"Bear\", her cat and dog respectively. Every coding problem is related to her pets in some way.\n          </p>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default AboutScreen","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.scss'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\nimport CodeEnvironment from './screens/CodeEnvironment'\nimport NavBar from './containers/NavBar/NavBar'\nimport ProblemList from './components/ProblemList/ProblemList'\nimport AboutScreen from './screens/AboutScreen/AboutScreen'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Switch>\n            <Route exact={true} path=\"/\">\n              <NavBar/>\n              <h1 className='title'>Pick A Problem</h1>\n              <ProblemList/>\n            </Route>\n            <Route exact={true} path=\"/about\">\n              <NavBar/>\n              <AboutScreen/>\n            </Route>\n            <Route path=\"/problem/:id\" component={CodeEnvironment} />\n          </Switch>\n        </div>\n      </Router>            \n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const defaultState = {\n  problemClass: 'expanded',\n  terminalClass: 'terminal',\n  codeEditorWidth: 6,\n  codeEditorHeight: '50vh'\n}\n\nexport default function screenLayoutReducer(state = defaultState, action) {\n  switch (action.type) {\n    case 'CLOSE_PROBLEM':\n      return {\n        ...state,\n        problemClass: action.payload.problemClass,\n        codeEditorWidth: action.payload.codeEditorWidth \n      }\n    case 'EXPAND_PROBLEM':\n      return {\n        ...state,\n        problemClass: action.payload.problemClass,\n        codeEditorWidth: action.payload.codeEditorWidth \n      }\n    case 'SHOW_TERMINAL':\n      return {\n        ...state,\n        terminalClass: action.payload.terminalClass,\n        codeEditorHeight: action.payload.codeEditorHeight\n      }\n    case 'HIDE_TERMINAL':\n      return {\n        ...state,\n        terminalClass: action.payload.terminalClass,\n        codeEditorHeight: action.payload.codeEditorHeight\n      }\n    default:\n      return state\n  }\n}\n","const defaultState = {\n  code: '' \n}\n\nconst codeReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'UPDATE_CODE':\n      return {\n        ...state,\n        code: action.payload.code\n      }\n    default:\n      return state \n  }\n}\n\nexport default codeReducer\n","const defaultState = {\n  id: -1,\n  num_inputs: -1,\n  title: '',\n  description: '',\n  challenge: '',\n  test_case_1: '',\n  test_case_2: ''\n}\n\nconst problemReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'UPDATE_PROBLEM':\n      return {\n        ...state,\n        title: action.payload.problem.title,\n        description: action.payload.problem.description,\n        challenge: action.payload.problem.challenge,\n        test_case_1: action.payload.problem.test_case_1,\n        test_case_2: action.payload.problem.test_case_2,\n        id: action.payload.problem.id\n      }\n    default:\n      return state \n  }\n}\n\nexport default problemReducer \n\n","const defaultState = {\n  modalContent: '',\n  showModal: false \n}\n\nconst responseReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SHOW_MODAL':\n      return {\n        ...state,\n        modalContent: action.payload.modalContent,\n        showModal: action.payload.showModal\n      }\n    case 'CLOSE_MODAL':\n      return {\n        ...state,\n        modalContent: action.payload.modalContent,\n        showModal: action.payload.showModal\n      }\n    default:\n      return state \n  }\n}\n\nexport default responseReducer \n\n","import screenLayoutReducer from './ScreenLayoutReducer'\nimport codeReducer from './CodeReducer'\nimport problemReducer from './ProblemReducer'\nimport responseReducer from './ResponseReducer'\nimport { combineReducers } from 'redux'\n\nconst rootReducer = combineReducers({\n  screenLayout: screenLayoutReducer,\n  codeState: codeReducer,\n  problem: problemReducer,\n  response: responseReducer\n})\n\nexport default rootReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers/index'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}